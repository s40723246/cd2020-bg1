<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>weeks</h1>
<p><a href="https://s40723246.github.io/cd2020-bg1/content/week1~week5.html">week1~week5</a></p>
<p><a href="https://s40723246.github.io/cd2020-bg1/content/week6~week9.html">week6~week9</a></p>
<p><a href="https://s40723246.github.io/cd2020-bg1/content/week10~week14.html">week10~week14</a></p>
<p><a href="https://s40723246.github.io/cd2020-bg1/content/week15~week18.html">week15~week18</a></p>
<h2>week1~week5</h2>
<p><span style="color: #ff0000;">week1</span></p>
<p><strong><span>text:</span></strong></p>
<p><span>1.下載</span><span><a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a></span><span><span> </span>(編譯  Solvespace 用)，完成後開啟。<br/>2.登入個人github帳號，創建新的倉儲cd2020。<br/></span><span>3.進入要存放的</span><span>資料夾<br/></span><span>4.輸入</span><span>git clone  <span>https://github.com/s40723246/cd2020<span> 。</span></span><span><br/>5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 。<br/>6.將up_dir的裡的資料複<span>製到cd2020</span>。<br/>7.完成後，python wsgi.py 開始編輯倉儲。<br/>8.編輯完成後，<span> </span>git add .<span><span> </span>&gt;</span><span> </span>git commit -m "  "<span><span> </span>&gt;</span><span> </span>git push。   </span></span></p>
<p><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/JQrKRM6t3_s" width="560"></iframe></span></span></p>
<hr/>
<p><span style="color: #ff0000;">week2</span></p>
<p><strong><span>第一組第一次直播會議</span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/062ZSwlIKT8" width="560"></iframe></p>
<p><span data-contrast="auto"><span data-wac-het="1">第一組 <span> </span><span>第一次會議PDF內容</span>   <span> </span></span><span data-wac-het="1">(WEEK1</span><span data-wac-het="1">)</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="auto"><span data-wac-het="1">會議流程:</span></span></p>
<p><span data-contrast="auto"><span data-wac-het="1">1.成員簽到</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="auto"><span data-wac-het="1">2.討論日後分工</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="auto"><span data-wac-het="1">3.有問題的同學提出問題</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span><span data-contrast="auto"><span data-wac-het="1">成員名單</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></span></p>
<p><span data-contrast="auto"><span data-wac-het="1">1.</span></span><span data-contrast="none"><span data-ccp-charstyle="Hyperlink" data-wac-het="1">40723201</span></span><span data-contrast="none"><span data-wac-het="1"><span> </span></span><span data-wac-het="1">(簽</span><span data-wac-het="1">) 已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">2.40723206 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">小組長</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">3.40723213 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">4.40723216 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">5.40723223 (簽) </span></span><span data-ccp-props="{}" data-wac-het="1"><span data-contrast="none"><span data-wac-het="1">已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></span></p>
<p><span data-contrast="none"><span data-wac-het="1">6.40723226 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">7.40723229 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">小組長</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">8.40723230 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">9.40723241 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站 </span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">10.40723242 (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">小組長</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">11.40723246 (group leader) (簽)<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">已建立完成網站</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">12.40732319 (簽)</span></span><span data-ccp-props="{}" data-wac-het="1">  </span></p>
<p><span><span data-contrast="none"><span data-wac-het="1">日後小組分工</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></span></p>
<p><span data-contrast="none"><span data-wac-het="1">1.由(40723201、40723206、40723230、40723241、40723246)，</span><span data-wac-het="1">已經建立好網站及編輯完網站的同學，前去協助還沒完成的同學，<span>及分配工作</span></span></span></p>
<p><span data-contrast="none"><span data-wac-het="1">2.</span></span><span data-contrast="none"><span data-wac-het="1">40723213</span></span><span data-contrast="none"><span data-wac-het="1">、</span></span><span data-contrast="none"><span data-wac-het="1">40723242督處尚未完成的同學，互相協助來完成第一周課程</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">3.40723223</span></span><span data-contrast="none"><span data-wac-het="1">、</span></span><span data-contrast="none"><span data-wac-het="1">40723223負責處理小組會議</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-contrast="none"><span data-wac-het="1">4.40723246<span> </span></span></span><span data-contrast="none"><span data-wac-het="1">負責製作小組會議PDF</span></span></p>
<p><span data-contrast="none"><span data-wac-het="1">5.40723241</span></span><span data-contrast="none"><span data-wac-het="1">、</span></span><span data-contrast="none"><span data-wac-het="1">40723216提醒小組問題及完成分組作業</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span><span data-contrast="none"><span data-wac-het="1">組員會議中提醒的事項:</span></span></span></p>
<p><span data-ccp-props="{}" data-wac-het="1"> </span><span data-contrast="none"><span data-wac-het="1">1.網站的格式及編譯</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-ccp-props="{}" data-wac-het="1"> </span><span data-contrast="none"><span data-wac-het="1">2.其餘的工作分配</span></span><span data-ccp-props="{}" data-wac-het="1"> </span></p>
<p><span data-ccp-props="{}" data-wac-het="1"> </span><span data-contrast="none"><span data-wac-het="1">3.PDF放倉儲的download及如何放置</span></span></p>
<p><span data-contrast="none"><span data-wac-het="1"><img alt="" height="297" src="/images/don.PNG" width="344"/></span></span></p>
<hr/>
<p><span style="color: #ff0000;">week3</span></p>
<p><span style="color: #ff0000;"></span>由成員執行任務並編譯整理製作PDF</p>
<p>1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</p>
<p>2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain<span> </span><a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a><span> </span>website,<span> </span><a href="https://github.com/getpelican/pelican">Pelican blog</a><span> </span>and<span> </span><a href="https://github.com/hakimel/reveal.js/">Reveal.js</a><span> </span>presentation on<span> </span><a href="https://github.com/">Github</a>?</p>
<p><span>3. What do you need to know from </span><a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a><span> to implement a four-wheeled robot? </span></p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim User Manual</a></p>
<p>translation Simulation ~ PDF</p>
<p><span style="color: #ff0000;">week4</span></p>
<p><strong>本周各組員皆須對各組員繳交之</strong>Assignment 1進行<a href="https://docs.google.com/forms/d/e/1FAIpQLSeBw2zOZZvLzREkonbtrEeMLixmSVqsxGwq7LZekra2lcBXgQ/viewform">評分</a></p>
<p>40723242進度影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-H4bnlTl9tA" width="560"></iframe></p>
<p>40723246進度影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/z548viRDp7k" width="560"></iframe></p><h2>week6~week9</h2>
<h2>week10~week14</h2>
<h2>week15~week18</h2>
<h1>members</h1>
<p><span>Repository: </span><a href="https://github.com/s40723201/cd2020">40723201</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723201.github.io/cd2020">40723201</a><br/><span>Repository:<span> </span></span><a cd2020"="" github.com="" href="htt&lt;h2&gt;week6~week9&lt;/h2&gt;
&lt;h2&gt;week10~week14&lt;/h2&gt;
&lt;h2&gt;week15~week18&lt;/h2&gt;
&lt;h1&gt;members&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;Repository: &lt;/span&gt;&lt;a href=" https:="" s40723201="">40723201</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723201.github.io/cd2020">40723201</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723206/cd2020">40723206</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723206.github.io/cd2020">40723206</a> (小組長)<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723213/cd2020">40723213</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723213.github.io/cd2020">40723213</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723215/cd2020">40723215</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723215.github.io/cd2020">40723215</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723216/cd2020">40723216</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723216.github.io/cd2020">40723216</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723223/cd2020">40723223</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723223.github.io/cd2020">40723223</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723226/cd2020">40723226</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723226.github.io/cd2020">40723226</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723229/cd2020">40723229</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723229.github.io/cd2020">40723229</a> <span>(小組長)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723230/cd2020">40723230</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723230.github.io/cd2020">40723230</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723241/cd2020">40723241</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723241.github.io/cd2020">40723241</a><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723242/cd2020">40723242</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723242.github.io/cd2020">40723242</a> (小組長)<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723246/cd2020">40723246</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723246.github.io/cd2020">40723246</a><span><span> </span>(group leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/40732319/cd2020">40732319</a><span><span> </span>| Site:<span> </span></span><a href="https://40732319.github.io/cd2020">40732319</a></p>
<h1>assignments</h1>
<p><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" style="color: #0000ff;" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">First work </span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">實施四輪機器人</span></span></p>
<p><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">1.<a href="http://www.coppeliarobotics.com/helpFiles/index.html">整理資料</a></span><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1" style="color: #000000;"> [</span></span><span style="color: #ff6600;"><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">BubbleRob</span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1"> </span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">tutorial、Line</span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1"> following </span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">BubbleRob</span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1"> tutorial 、External controller tutorial </span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1">、Simulation </span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">dialog</span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" xml:lang="EN-US"><span class="SpellingError BCX0 SCXW118066248" data-wac-het="1">、Simulation</span></span><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" style="color: #000000;" xml:lang="EN-US"><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1">] </span></span></span></p>
<p><span style="color: #ff6600;"><span class="TextRun BCX0 SCXW118066248" data-contrast="auto" lang="EN-US" style="color: #000000;" xml:lang="EN-US"><span class="NormalTextRun BCX0 SCXW118066248" data-wac-het="1"></span></span></span></p>
<h2>assignment 1</h2>
<h3>random grouping</h3>
<div class="syntaxhighlighter py"><br/><br/>  要進行隨機分組及隨機點名，必須先了解程式裡導入的模組及在模組中所用的<br/>語法、迴圈:<span>request</span>、<span>ast.literal_eval</span>、<span>random</span>、<span>for</span>迴圈<br/><br/>(1)<span> request</span>模組:此模組是為了可以使用 Python 來下載網頁上的資料，是以<br/><span>request</span>模組建立適當的 HTTP 請求，透過 HTTP 請求從網頁伺服器下載<br/>指定的資料，分為兩種模式Post、Get。<br/><br/>參考文獻:<span> </span><a href="https://ithelp.ithome.com.tw/articles/10206215"><span>https://ithelp.ithome.com.tw/articles/10206215</span><br/></a><br/>(2)<span> </span><span>ast</span>模組: 此模組是python原始碼到位元組碼的一種中間產物，藉助<span>ast</span><br/>模組可以從語法樹的角度分析原始碼結構，其中的語法<span>ast.literal_eval</span><br/>是為了能夠安全地評估表達式節點或包含Python文字或容器顯示的字符<br/>串。提供的字符串或節點只能由以下Python文字結構組成：字符串、字<br/>節、數字、元組、列表、字典、集合、布林值、None。<br/><br/>參考文獻:<span> </span><a href="https://docs.python.org/3/library/ast.html"><span>https://docs.python.org/3/library/ast.html</span></a><br/><span><a href="https://www.itread01.com/content/1544847254.html">https://www.itread01.com/content/1544847254.html<br/></a></span><br/>(3)<span> </span><span>random</span>模組:此模組用於生成偽隨機數，且有許多種用法，例如:隨機選取<br/><span>choice</span>、隨機選取<span> sample</span><span> </span>(一次選多筆資料)、隨機調換順序<span> shuffle</span><span> </span>(就<br/>地調換順序)、隨機取得亂數<span> </span><span>random</span><span> </span>(0~1之間的隨機亂數)、隨機取得亂<br/>數<span> </span><span>uniform</span><span> </span>(可以指定範圍)。<br/><br/>參考文獻:<span> </span><a href="https://ithelp.ithome.com.tw/articles/10207483"><span>https://ithelp.ithome.com.tw/articles/10207483</span><br/></a><br/>(4)<span> </span><span>for</span>迴圈: 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴<br/>圈 (loop) 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行，<br/>是程式設計中很重要的一種控制結構，且分為兩類:<span>for</span>、<span>while</span></div>
<div class="syntaxhighlighter py"><br/>○<span> </span><span>for</span>迴圈基本語法:<span>for</span><span> </span>變數<span> </span><span>in</span><span> </span><span>list</span>、<span>字串</span>、<span>range</span><br/>○<span><span> </span>while</span>迴圈基本語法:<span>while</span><span> </span>布林值<br/><br/><span>  for</span>迴圈及<span>while</span>迴圈比較:<span><span> </span>for</span>迴圈比較適用在已知迴圈數的問題，而<br/><span>while</span>迴圈則適用在「無法預知迴圈數」的問題上。<br/><br/>參考文獻:<a href="https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6"><span><span> </span>https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6</span></a><br/><br/><br/></div>
<h3>portable system</h3>
<p><strong><span color="#000000">text:</span></strong></p>
<p><span>將可攜系統下的python 3.7.3系統更新至python 3.8.2</span></p>
<p><span>1.先去GOOGLE SEARCH <span><a href="https://www.python.org/downloads/windows/">PYTHON</a></span></span> <span>(點這下載)</span></p>
<p><span>2.下載<span><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a> <span>(點這下載)</span></span></span></p>
<p><span><span><span>3.載完點並<span>不要勾選pip選項，接著按下next選取放置資料夾</span></span></span></span></p>
<p><span><span><span><span>4.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data&lt;py382&lt;<span>wscite432&lt;portablegit</span></span></span></span></span></p>
<p><span><span><span><span><span>5.下載SciTE系統<span> </span><span><span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></span>，下載完後解壓縮至data下的wscite432</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>6.在cd2020下建立新的start.bat及stop.bat</span></span></span></span></span></span></p>
<p><img alt="" height="204" src="/images/start-1.PNG" width="325"/></p>
<p>7.至<span><span>SciTE系統更改</span></span>start.bat及stop.bat</p>
<blockquote><img alt="" height="340" src="https://s40723246.github.io/cd2020/images/003.PNG" width="416"/></blockquote>
<p><img alt="" height="191" src="https://s40723246.github.io/cd2020/images/004.PNG" width="289"/></p>
<p><span>8.</span><span>載入MSYS2 </span><span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a></span><span> 至data</span><br/><span>9.</span><span>載入PortableGit </span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a></span><span> 至</span><span>portablegit<br/></span><span>10</span><span color="#000000"><span>.裝入<span><a href="https://bootstrap.pypa.io/get-pip.py">pip</a></span></span></span><span>，另存新檔到data</span><br/><span>11.測試</span><span>將python3.8.2版本，將少的模組下載回來</span></p>
<p><span><img alt="" height="70" src="https://s40723246.github.io/cd2020/images/005.PNG" width="448"/></span></p>
<p><strong><span></span></strong></p><h3>Four Wheel Car</h3>
<p><span><a href="https://www.coppeliarobotics.com/helpFiles/index.html">BubbleRob tutorial</a>:                                                                   此部分由40723206提供</span></p>
<p>在此教程中會讓我們設計簡單的BubbleRob機器人並進行一些基礎的模擬操作，而大二上我們其實就有實際的以v-rep操作過這個教程，在這個教程中的說明包括了如何建造模型機器人主體、車輪及後方支撐滑塊，還有如何建造及設置障礙物，以及設定好的距離傳感器後使其去感測並避開我們所設置的障礙物，而最重要的要點是如何去設計指令讓傳動器依照我們所想要的方式去做動，且當距離感測器偵測到障礙物時才能使機器人迅速閃避障礙物，另外還有視覺辨識器，使機器人在移動時，讓我們能夠觀測到機器人行徑方向之路況。</p>
<p></p>
<p><span style="color: #ff0000;">translation Simulation ~ PDF</span></p>
<p></p>
<p><img alt="" height="846" src="https://s40723241.github.io/cd2020/images/%E6%A8%A1%E6%93%AC1.JPG" width="567"/></p>
<p><img alt="" height="861" src="https://s40723241.github.io/cd2020/images/%E6%A8%A1%E6%93%AC2.JPG" width="568"/></p>
<p>translation  Simulation dialog ~ PDF</p>
<p><img alt="" height="831" src="https://s40723241.github.io/cd2020/images/%E6%A8%A1%E6%93%AC%E6%AA%94%E6%A1%88.JPG" width="543"/></p>
<p><span> </span></p>
<h5><span lang="zh-TW">Line following BubbleRob tutorial</span></h5>
<h5><span lang="zh-TW">在本教程中，我們旨在擴展BubbleRob的功能，以使他/她遵循地面上的規則。確保您已經閱讀並理解了第一個BubbleRob教程。本教程由Eric Rohmer提供。</span></h5>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">在CoppeliaSim的安裝文件夾中的tutorials / BubbleRob中加載第一個BubbleRob教程的場景。與本教程相關的場景文件位於tutorials / LineFollowingBubbleRob中。<br/>下圖說明了我們將設計的仿真場景：</span></h5>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW"><img height="353" src="https://www.coppeliarobotics.com/helpFiles/en/images/lbubbleRobTut1.jpg" width="544"/><br/></span></h5>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">我們首先創建3個視覺傳感器中的第一個，並將其附加到bubbleRob對象。選擇[菜單欄-&gt;添加-&gt;視覺傳感器-&gt;正交類型]。通過雙擊場景層次中新創建的視覺傳感器圖標來編輯其屬性，並更改參數以反映以下對話框：</span></h5>
<p><span lang="zh-TW">                                  <img height="405" src="https://www.coppeliarobotics.com/helpFiles/en/images/lbubbleRobTut2.jpg" width="261"/></span></p>
<h5><span lang="zh-TW">視覺傳感器必需面向地面，因此選擇它，然後在“方向”對話框中的“方向”選項上，將“ Alpha-Beta-Gamma”項設置為[180; 0; 0]。</span></h5>
<h5><span lang="zh-TW">我們有幾種可能性可以讀取視覺傳感器。由於我們的視覺傳感器只有一個像素，並且操作簡單，因此我們只需查詢視覺傳感器讀取的圖像的平均強度值即可。對於更複雜的情況，我們可以設置視覺回調函數。現在，複製並貼上視覺傳感器兩次，並將其名稱調整為leftSensor，middleSensor和rightSensor。將bubbleRob設置為其關係（即，將其附加到bubbleRob對象）。現在，您的傳感器在場景層次中應如下所示：</span></h5>
<p><span lang="zh-TW">                                     <img src="https://www.coppeliarobotics.com/helpFiles/en/images/lbubbleRobTut4.jpg"/></span></p>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">讓我們正確放置傳感器。為此使用位置對話框，在位置選項卡上，並設置以下絕對坐標： 左傳感器：[0.2; 0.042; 0.018] 中間傳感器：[0.2; 0; 0.018] 右傳感器：[0.2; -0.042; 0.018]<br/><span><br/>現在讓我們修改環境。我們可以移去BubbleRob前面的幾個圓柱體。接下來，我們將構建機器人將嘗試遵循的路徑。從現在開始切換到頂視圖：通過頁面選擇器工具欄按鈕選擇頁面4。然後點擊[菜單欄-&gt;添加-&gt;路徑-&gt;圓圈類型]。使用鼠標啟用對象移動。您可以通過兩種方式調整路徑的形狀： 選擇路徑（並且只有路徑）後，按住Ctrl並點擊其控制點之一。然後可以將它們拖動到正確的位置。 選擇路徑後，進入路徑編輯模式。在那裡，您可以靈活地調整各個路徑控制點。</span><br/></span></h5>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">一旦對路徑的幾何形狀滿意（您隨時可以在以後的階段對其進行修改），請選擇它，然後在路徑屬性中取消選中“顯示點的方向”，“顯示路徑線”和“顯示路徑上的當前位置”。然後點擊顯示路徑整形對話框。這將打開路徑整形對話框。點擊啟用路徑變更，將類型設置為水平線段，並將縮放因子設置為4.0。最後將顏色調整為黑色。我們必須對路徑進行最後一個重要的調整：當前，路徑的z位置與地板的z位置重合。結果是有時我們會看到路徑，有時會看到地板（這種效果在openGl行話中被稱為“ z-fighting”）。這不僅影響我們所看到的，而且還會影響視覺傳感器所看到的。為了避免與z戰鬥有關的問題，只需將路徑對象的位置向上移動0.5毫米即可。</span></h5>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">最後一步是調整BubbleRob的控制器，使其也將遵循黑色路徑。打開附加到bubbleRob的子腳本，並將其替換為以下代碼：</span></h5>
<table>
<tbody>
<tr>
<td>
<pre class="lightRedBox">function speedChange_callback(ui,id,newVal)
    speed=minMaxSpeed[1]+(minMaxSpeed[2]-minMaxSpeed[1])*newVal/100
end

function sysCall_init()
    -- This is executed exactly once, the first time this script is executed
    bubbleRobBase=sim.getObjectAssociatedWithScript(sim.handle_self)
    leftMotor=sim.getObjectHandle("leftMotor")
    rightMotor=sim.getObjectHandle("rightMotor")
    noseSensor=sim.getObjectHandle("sensingNose")
    minMaxSpeed={50*math.pi/180,300*math.pi/180}
    backUntilTime=-1 -- Tells whether bubbleRob is in forward or backward mode
    floorSensorHandles={-1,-1,-1}
    floorSensorHandles[1]=sim.getObjectHandle("leftSensor")
    floorSensorHandles[2]=sim.getObjectHandle("middleSensor")
    floorSensorHandles[3]=sim.getObjectHandle("rightSensor")
    -- Create the custom UI:
        xml = '&lt;ui title="'..sim.getObjectName(bubbleRobBase)..' speed" closeable="false" resizeable="false" activate="false"&gt;'..[[
        &lt;hslider minimum="0" maximum="100" onchange="speedChange_callback" id="1"/&gt;
        &lt;label text="" style="* {margin-left: 300px;}"/&gt;
        &lt;/ui&gt;
        ]]
    ui=simUI.reate(xml)
    speed=(minMaxSpeed[1]+minMaxSpeed[2])*0.5
    simUI.setSliderValue(ui,1,100*(speed-minMaxSpeed[1])/(minMaxSpeed[2]-minMaxSpeed[1]))
end

function sysCall_actuation()
    result=sim.readProximitySensor(noseSensor)
    if (result&gt;0) then backUntilTime=sim.getSimulationTime()+4 end

    -- read the line detection sensors:
    sensorReading={false,false,false}
    for i=1,3,1 do
        result,data=sim.readVisionSensor(floorSensorHandles[i])
        if (result&gt;=0) then
            sensorReading[i]=(data[11]&lt;0.3) -- data[11] is the average of intensity of the image
        end
        print(sensorReading[i])
    end

    -- compute left and right velocities to follow the detected line:
    rightV=speed
    leftV=speed
    if sensorReading[1] then
        leftV=0.03*speed
    end
    if sensorReading[3] then
        rightV=0.03*speed
    end
    if sensorReading[1] and sensorReading[3] then
        backUntilTime=sim.getSimulationTime()+2
    end

    if (backUntilTime&lt;sim.getSimulationTime()) then
        -- When in forward mode, we simply move forward at the desired speed
        sim.setJointTargetVelocity(leftMotor,leftV)
        sim.setJointTargetVelocity(rightMotor,rightV)
    else
        -- When in backward mode, we simply backup in a curve at reduced speed
        sim.setJointTargetVelocity(leftMotor,-speed/2)
        sim.setJointTargetVelocity(rightMotor,-speed/8)
    end
end

function sysCall_cleanup()
	simUI.destroy(ui)<br/>end</pre>
</td>
</tr>
</tbody>
</table>
<h5 class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW">您可以輕鬆地調試以下視覺傳感器的生產線：選擇一個，然後在場景視圖中選擇[右鍵-&gt;添加-&gt;浮動視圖]，然後在新添加的浮動視圖中選擇[右鍵-&gt;視圖- -&gt;將視圖與選定的視覺傳感器關聯]。</span></h5>
<p><strong>CoppeliaSim</strong></p>
<p>外部控制器教程 在CoppeliaSim中，有幾種方法可以控制機器人或仿真： 最方便的方法是編寫一個子腳本來處理給定機器人或模型的行為。這是最方便的方法，因為子腳本直接附加到場景對象，它們將與相關的場景對像一起復制，它們不需要使用外部工具進行任何編譯，它們可以在線程或非線程模式下運行，它們可以通過自定義Lua函數或Lua擴展庫進行擴展。使用子腳本的另一個主要優點是：與本節中提到的後3種方法（即使用常規API）一樣，沒有通信延遲，並且子腳本是應用程序主線程的一部分（固有的同步操作）。</p>
<p><span>   <span> </span></span>可以控制機器人或模擬的另一種方法是編寫插件。插件機制允許使用回調機制，自定義<span>Lua</span>函數註冊，當然還可以訪問外部函數庫。插件通常與子腳本結合使用。使用插件的主要優勢還在於，與本節中提到的後<span>3</span>種方法（即使用常規<span>API</span>）一樣，沒有通信延遲，並且插件是應用程序主線程的一部分（固有的同步操作）。插件的缺點是：它們的編程更加複雜，並且也需要使用外部編譯。</p>
<p><span>  <span> </span></span>控制機器人或模擬的第三種方法是編寫依賴於遠程<span>API</span>的外部客戶端應用程序。如果您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。遠程<span>API</span>有兩個版本：基於<span>B0</span>的遠程<span>API</span>和舊版遠程<span>API</span>。</p>
<p><span>   <span> </span></span>控制機器人或仿真的第五種方法是通過<span>ROS</span>節點。<span><span> </span>ROS</span>與遠程<span>API</span>相似，是使多個分佈式進程相互通信的便捷方法。儘管遠程<span>API</span>非常輕巧且快速，但它僅允許與<span>CoppeliaSim</span>通信。另一方面，<span>ROS</span>允許幾乎將任意數量的進程相互連接，並且提供了大量兼容的庫。</p>
<p><span>    <span> </span></span>控制機器人或模擬的第六種方法是通過<span>BlueZero</span>（<span>BØ</span>）節點。與<span>ROS</span>類似，<span>BlueZero</span>是使多個分佈式進程相互通信的一種便捷方法。</p>
<p><span>    <span> </span></span>控制機器人或模擬的第七種方法是編寫一個外部應用程序，該應用程序通過各種方式（例如管道，套接字，串行端口等）與<span>CoppeliaSim</span>插件或<span>CoppeliaSim</span>腳本進行通信。</p>
<h2>assignments 2</h2>
<h2>assignments 3</h2>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>